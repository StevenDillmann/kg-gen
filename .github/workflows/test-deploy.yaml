name: Test Deploy Workflow

on:
  workflow_dispatch:
    inputs:
      mode:
        description: 'Test mode'
        required: true
        default: 'dry-run'
        type: choice
        options:
          - dry-run
          - test-deploy
      test_project_id:
        description: 'GCP Project ID for test deployment (only used in test-deploy mode)'
        required: false
        default: 'kggen-ai'
        type: string

env:
  CLOUD_RUN_SERVICE: app-test
  CLOUD_RUN_REGION: us-central1
  ARTIFACT_REGISTRY_REPO: app
  IMAGE_NAME: cloud-run-app-test
  ARTIFACT_REGISTRY_LOCATION: us-central1

jobs:
  test-deploy:
    name: Test Deploy (${{ inputs.mode }})
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set project ID based on mode
        run: |
          if [[ "${{ inputs.mode }}" == "test-deploy" ]]; then
            echo "GCP_PROJECT_ID=${{ inputs.test_project_id }}" >> $GITHUB_ENV
          else
            echo "GCP_PROJECT_ID=kggen-ai" >> $GITHUB_ENV
          fi
      
      # DRY RUN MODE
      - name: Test deploy script (dry run)
        if: ${{ inputs.mode == 'dry-run' }}
        env:
          CLOUD_RUN_MAX_INSTANCES: ${{ vars.CLOUD_RUN_MAX_INSTANCES }}
          CLOUD_RUN_MIN_INSTANCES: ${{ vars.CLOUD_RUN_MIN_INSTANCES }}
          CLOUD_RUN_CPU: ${{ vars.CLOUD_RUN_CPU }}
          CLOUD_RUN_MEMORY: ${{ vars.CLOUD_RUN_MEMORY }}
          CLOUD_RUN_CONCURRENCY: ${{ vars.CLOUD_RUN_CONCURRENCY }}
          CLOUD_RUN_SERVICE_ACCOUNT: ${{ vars.CLOUD_RUN_SERVICE_ACCOUNT }}
        run: |
          chmod +x app/deploy-test.sh
          ./app/deploy-test.sh
      
      - name: Validate Dockerfile
        if: ${{ inputs.mode == 'dry-run' }}
        run: |
          if [[ ! -f "app/Dockerfile" ]]; then
            echo "❌ Dockerfile not found"
            exit 1
          fi
          echo "✅ Dockerfile validation passed"
      
      # TEST DEPLOY MODE
      - name: Authenticate to Google Cloud (test deploy)
        if: ${{ inputs.mode == 'test-deploy' }}
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - name: Set up Cloud SDK (test deploy)
        if: ${{ inputs.mode == 'test-deploy' }}
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: 'latest'
      
      - name: Configure Docker for Artifact Registry (test deploy)
        if: ${{ inputs.mode == 'test-deploy' }}
        run: |
          gcloud auth configure-docker ${{ env.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev
      
      - name: Deploy to test environment
        if: ${{ inputs.mode == 'test-deploy' }}
        env:
          CLOUD_RUN_MAX_INSTANCES: ${{ vars.CLOUD_RUN_MAX_INSTANCES }}
          CLOUD_RUN_MIN_INSTANCES: ${{ vars.CLOUD_RUN_MIN_INSTANCES }}
          CLOUD_RUN_CPU: ${{ vars.CLOUD_RUN_CPU }}
          CLOUD_RUN_MEMORY: ${{ vars.CLOUD_RUN_MEMORY }}
          CLOUD_RUN_CONCURRENCY: ${{ vars.CLOUD_RUN_CONCURRENCY }}
          CLOUD_RUN_SERVICE_ACCOUNT: ${{ vars.CLOUD_RUN_SERVICE_ACCOUNT }}
          GCP_PROJECT_ID: ${{ env.GCP_PROJECT_ID }}
          CLOUD_RUN_SERVICE: ${{ env.CLOUD_RUN_SERVICE }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        run: |
          chmod +x app/deploy.sh
          ./app/deploy.sh
      
      - name: Get Service URL (test deploy)
        if: ${{ inputs.mode == 'test-deploy' }}
        run: |
          SERVICE_URL=$(gcloud run services describe $CLOUD_RUN_SERVICE \
            --region="$CLOUD_RUN_REGION" \
            --project="$GCP_PROJECT_ID" \
            --format="value(status.url)")
          
          echo "Test service deployed to: $SERVICE_URL"
          echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_ENV
      
      - name: Test summary
        run: |
          if [[ "${{ inputs.mode }}" == "dry-run" ]]; then
            echo "## 🧪 Test Deploy Summary (Dry Run)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Status:** ✅ Dry run completed successfully" >> $GITHUB_STEP_SUMMARY
            echo "**Service:** $CLOUD_RUN_SERVICE" >> $GITHUB_STEP_SUMMARY
            echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "The real deployment workflow should work correctly!" >> $GITHUB_STEP_SUMMARY
          else
            echo "## 🚀 Test Deployment Complete" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Mode:** Test Deploy" >> $GITHUB_STEP_SUMMARY
            echo "**Project:** $GCP_PROJECT_ID" >> $GITHUB_STEP_SUMMARY
            echo "**Service:** $CLOUD_RUN_SERVICE" >> $GITHUB_STEP_SUMMARY
            echo "**URL:** $SERVICE_URL" >> $GITHUB_STEP_SUMMARY
            echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "⚠️ This is a TEST deployment. Remember to clean up test resources when done!" >> $GITHUB_STEP_SUMMARY
          f